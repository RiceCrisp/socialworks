$row-padding: 0;
$grid-padding: 5px;
$xs-break: 0px;
$sm-break: 576px;
$md-break: 768px;
$lg-break: 992px;
$xl-break: 1200px;
$sizes: (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12);
$breaks: (
  xs: $xs-break,
  sm: $sm-break,
  md: $md-break,
  lg: $lg-break,
  xl: $xl-break
);
$breaks-alt: (
  xs: $sm-break - 1px,
  sm: $md-break - 1px,
  md: $lg-break - 1px,
  lg: $xl-break - 1px,
);

@mixin media-breakpoint-up($name) {
  @media (min-width: map-get($breaks, $name)) {
    @content;
  }
}
@mixin media-breakpoint-down($name) {
  @media (max-width: map-get($breaks-alt, $name)) {
    @content;
  }
}

.row {
  display: flex;
  flex: 0 1 auto;
  flex-direction: row;
  flex-wrap: wrap;
  padding-right: $row-padding;
  padding-left: $row-padding;
}

[class*=col-] {
  flex: 1 0 100%;
  max-width: 100%;
  padding-left: $grid-padding;
  padding-right: $grid-padding;
  box-sizing: border-box;
}

@each $key, $val in $breaks {
  @include media-breakpoint-up($key) {
    @if $key == 'xs' {
      .container {
        width: 100%;
      }
    }
    @else {
      .container {
        width: $val;
      }
    }
    @each $size in $sizes {
      .col-#{$key}-#{$size} {
        flex-basis: percentage((1/12) * $size);
        max-width: percentage((1/12) * $size);
      }
      .col-#{$key}-offset-#{$size - 1} {
        margin-left: percentage((1/12) * ($size - 1));
      }
      // .visible-#{$key} {
      //   display: block;
      // }
      // .hidden-#{$key} {
      //   display: none;
      // }
    }
  }
}
